var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './core-91d54087.js';
import './presence-handler-a532ff81.js';
import { c as closest, i as injectGlobalStyle, s as setCustomProperties, p as presence, e as enterChildren, a as exitChildren, b as isHTMLElement, h as hasData } from './index-5c6ab6b0.js';
var hold = function (el) { return function (cb) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                el.dataset.hold = '';
                return [4 /*yield*/, cb(el).then(function (r) {
                        if (r && 'finished' in r) {
                            return r.finished;
                        }
                        return;
                    })];
            case 1:
                _c.sent();
                delete el.dataset.hold;
                return [2 /*return*/];
        }
    });
}); }; };
var AnimatePresence = /** @class */ (function () {
    function class_1(hostRef) {
        var _this = this;
        registerInstance(this, hostRef);
        /** @internal */
        this.__presenceKey = "animate-presence-" + ids++;
        /** @internal */
        this.descendants = [];
        this.getClosestParent = function () {
            var _a;
            var base = (_a = _this.element.parentElement, (_a !== null && _a !== void 0 ? _a : _this.element.getRootNode().host));
            return closest(_this.element.tagName, base);
        };
        this.willExit = false;
        this.didExit = false;
        this.willEnter = false;
        this.didEnter = false;
        this.handleMutation = this.handleMutation.bind(this);
        this.animatePresenceExitComplete = createEvent(this, "animatePresenceExitComplete", 7);
        this.animatePresenceEnter = createEvent(this, "animatePresenceEnter", 7);
        this.animatePresenceExit = createEvent(this, "animatePresenceExit", 7);
    }
    class_1.prototype.observeChanged = function () {
        if (this.observe) {
            this.addMO();
            this.mo.observe(this.element, {
                childList: true,
                attributes: true,
                attributeFilter: ['data-key'],
            });
        }
        else {
            this.removeMO();
        }
    };
    class_1.prototype.componentWillLoad = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                injectGlobalStyle();
                this.ancestor = this.getClosestParent();
                if (typeof this.observe === 'undefined') {
                    this.observe = (_b = (_a = this.ancestor) === null || _a === void 0 ? void 0 : _a.observe, (_b !== null && _b !== void 0 ? _b : true));
                }
                Array.from(this.element.children).map(function (el, i) {
                    setCustomProperties(el, { i: i });
                    el.style.setProperty('animation-play-state', 'paused');
                    el.dataset.enter = '';
                });
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.componentDidLoad = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_c) {
                this.observeChanged();
                (_a = this.ancestor) === null || _a === void 0 ? void 0 : _a.registerChild(this.element);
                if (!this.ancestor) {
                    this.enter();
                }
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.componentDidUnload = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_c) {
                this.removeMO();
                (_a = this.ancestor) === null || _a === void 0 ? void 0 : _a.unregisterChild(this.__presenceKey);
                this.descendants = [];
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.enterNode = function (el, i) {
        if (i === void 0) { i = 0; }
        return __awaiter(this, void 0, void 0, function () {
            var event;
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        delete el.dataset.exit;
                        event = new CustomEvent('animatePresenceEnter', {
                            bubbles: true,
                            detail: {
                                i: i,
                                hold: hold(el),
                            },
                        });
                        el.dispatchEvent(event);
                        el.style.removeProperty('animation-play-state');
                        el.dataset.enter = '';
                        setCustomProperties(el, { i: i });
                        return [4 /*yield*/, presence(el, {
                                afterSelf: function () { return __awaiter(_this, void 0, void 0, function () {
                                    return __generator(this, function (_c) {
                                        delete el.dataset.initial;
                                        delete el.dataset.enter;
                                        el.style.removeProperty('--i');
                                        return [2 /*return*/];
                                    });
                                }); },
                            })];
                    case 1:
                        _c.sent();
                        return [2 /*return*/, enterChildren(el)];
                }
            });
        });
    };
    class_1.prototype.exitNode = function (el, method, i) {
        if (method === void 0) { method = 'remove'; }
        if (i === void 0) { i = 0; }
        return __awaiter(this, void 0, void 0, function () {
            var event;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4 /*yield*/, exitChildren(el)];
                    case 1:
                        _c.sent();
                        delete el.dataset.willExit;
                        setCustomProperties(el, { i: i });
                        event = new CustomEvent('animatePresenceExit', {
                            bubbles: true,
                            detail: {
                                i: i,
                                hold: hold(el),
                            },
                        });
                        el.dispatchEvent(event);
                        el.dataset.exit = '';
                        return [4 /*yield*/, presence(el, {
                                afterSelf: function () {
                                    if (method === 'remove') {
                                        el.remove();
                                    }
                                    else if (method === 'hide') {
                                        el.style.setProperty('visibility', 'hidden');
                                    }
                                },
                            })];
                    case 2:
                        _c.sent();
                        return [2 /*return*/, Promise.resolve()];
                }
            });
        });
    };
    class_1.prototype.handleEnter = function (node, _record, i) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_c) {
                if (!isHTMLElement(node))
                    return [2 /*return*/];
                if (hasData(node, 'exit'))
                    return [2 /*return*/];
                if (hasData(node, 'willExit')) {
                    return [2 /*return*/, this.exitNode(node, 'remove', i)];
                }
                else {
                    return [2 /*return*/, this.enterNode(node, i)];
                }
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.handleExit = function (node, record, i) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_c) {
                if (!isHTMLElement(node))
                    return [2 /*return*/];
                if (hasData(node, 'exit') || hasData(node, 'willExit')) {
                    return [2 /*return*/];
                }
                node.dataset.willExit = '';
                setCustomProperties(node, { i: i });
                if (isHTMLElement(record.previousSibling)) {
                    record.previousSibling.insertAdjacentElement('afterend', node);
                }
                else if (isHTMLElement(record.target)) {
                    record.target.prepend(node);
                }
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.handleMutation = function (records) {
        var i = 0;
        for (var _i = 0, _c = records.reverse(); _i < _c.length; _i++) {
            var record = _c[_i];
            if (record.addedNodes.length === 1) {
                this.handleEnter(record.addedNodes[0], record, records.length - 1 - i);
            }
            if (record.removedNodes.length === 1) {
                this.handleExit(record.removedNodes[0], record, i);
            }
            i++;
        }
    };
    class_1.prototype.addMO = function () {
        if (!this.mo) {
            if ('MutationObserver' in window) {
                this.mo = new MutationObserver(this.handleMutation);
                this.observeChanged();
            }
        }
    };
    class_1.prototype.removeMO = function () {
        if (this.mo) {
            this.mo.disconnect();
            this.mo = undefined;
        }
    };
    /** @internal Registers a child element across shadow boundaries */
    class_1.prototype.registerChild = function (el) {
        return __awaiter(this, void 0, void 0, function () {
            var key;
            return __generator(this, function (_c) {
                key = el.__presenceKey;
                // Remove existing elements with same key to handle HMR
                this.descendants = __spreadArrays(this.descendants.filter(function (element) { return element.__presenceKey !== key; }), [
                    el,
                ]);
                return [2 /*return*/];
            });
        });
    };
    /** @internal */
    class_1.prototype.unregisterChild = function (key) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_c) {
                this.descendants = this.descendants.filter(function (el) { return el.__presenceKey !== key; });
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.animatePresenceExitCompleteHandler = function (event) {
        event.stopPropagation();
    };
    /**
     * Programmatically triggers an exit.
     *
     * Nested `<animate-presence>` children will be animated out from the bottom up, meaning that children elements trigger a parent's exit after their own exit finishes.
     */
    class_1.prototype.exit = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (this.didExit || this.willExit)
                            return [2 /*return*/];
                        this.willExit = true;
                        return [4 /*yield*/, Promise.all(Array.from(this.element.children)
                                .reverse()
                                .map(function (el, i) { return _this.exitNode(el, 'hide', i); }))];
                    case 1:
                        _c.sent();
                        this.didExit = true;
                        this.willExit = false;
                        this.animatePresenceExitComplete.emit();
                        return [2 /*return*/, Promise.resolve()];
                }
            });
        });
    };
    /**
     * Programmatically triggers an entrance.
     *
     * Nested `<animate-presence>` children will be animated in from the top down, meaning that parent elements trigger a child's entrance after their own entrance finishes.
     */
    class_1.prototype.enter = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        this.didExit = false;
                        this.willExit = false;
                        if (this.didEnter || this.willEnter)
                            return [2 /*return*/];
                        this.willEnter = true;
                        return [4 /*yield*/, Promise.all(Array.from(this.element.children).map(function (el, i) { return _this.enterNode(el, i); }))];
                    case 1:
                        _c.sent();
                        return [4 /*yield*/, enterChildren(this.element)];
                    case 2:
                        _c.sent();
                        this.didEnter = true;
                        this.willEnter = false;
                        return [2 /*return*/, Promise.resolve()];
                }
            });
        });
    };
    class_1.prototype.render = function () {
        return (h(Host, { style: { display: 'contents' } }, h("slot", null)));
    };
    Object.defineProperty(class_1.prototype, "element", {
        get: function () { return getElement(this); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(class_1, "watchers", {
        get: function () {
            return {
                "observe": ["observeChanged"]
            };
        },
        enumerable: true,
        configurable: true
    });
    return class_1;
}());
var ids = 0;
export { AnimatePresence as animate_presence };
